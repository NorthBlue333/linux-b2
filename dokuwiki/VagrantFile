# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "centos/7"
  config.vm.define "master" do |master|
    master.vm.provision "file", source: "./dokuwiki.conf", destination: "dokuwiki.conf"
    master.vm.provision "shell", path: "provision_both.sh"
    master.vm.network "private_network", ip: "192.168.10.100"
    master.vm.hostname = "master-dokuwiki"
    master.vm.provision "file", source: "./master_rsa", destination: "id_rsa"
    master.vm.provision "shell", inline: <<-SHELL
      sudo mv id_rsa /home/syncdokuwiki/.ssh/id_rsa
      sudo chown -R $(cat /etc/passwd | grep syncdokuwiki | cut -d ':' -f 3):$(cat /etc/passwd | grep syncdokuwiki | cut -d ':' -f 4) /home/syncdokuwiki/.ssh
      sudo chmod -R 600 /home/syncdokuwiki/.ssh/*
      echo "*/5 * * * * rsync --progress -avz -e 'ssh -o StrictHostKeyChecking=no -i /home/syncdokuwiki/.ssh/id_rsa' /var/www/dokuwiki/ syncdokuwiki@192.168.10.101:/var/www/dokuwiki/" | sudo -u syncdokuwiki crontab
      sudo systemctl restart crond
    SHELL
  end
  config.vm.define "slave" do |slave|
    slave.vm.provision "file", source: "./dokuwiki.conf", destination: "dokuwiki.conf"
    slave.vm.provision "shell", path: "provision_both.sh"
    slave.vm.network "private_network", ip: "192.168.10.101"
    slave.vm.hostname = "slave-dokuwiki"
    slave.vm.provision "file", source: "./master_rsa.pub", destination: "~/.ssh/master_rsa.pub"
    slave.vm.provision "shell", inline: <<-SHELL
      sudo cat /home/vagrant/.ssh/master_rsa.pub > /home/syncdokuwiki/.ssh/authorized_keys
      sudo chown -R $(cat /etc/passwd | grep syncdokuwiki | cut -d ':' -f 3):$(cat /etc/passwd | grep syncdokuwiki | cut -d ':' -f 4) /home/syncdokuwiki/.ssh
      sudo chmod 600 -R /home/syncdokuwiki/.ssh/*
    SHELL
  end
  
  config.vm.define "nginx" do |reverse|
    reverse.vm.provision "file", source: "./wiki.conf", destination: "wiki.conf"
    reverse.vm.provision "shell", path: "provision_nginx.sh"
    reverse.vm.network "private_network", ip: "192.168.10.200"
    reverse.vm.hostname = "reverse-nginx"
  end
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-spec
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
end
